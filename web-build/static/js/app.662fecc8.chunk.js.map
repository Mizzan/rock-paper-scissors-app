{"version":3,"sources":["src/PlayScreen.js","App.js","src/sign/rock.png","src/sign/paper.png","src/sign/scissors.png"],"names":["rock","require","paper","scissors","bgColor","styles","StyleSheet","create","container","flex","alignItems","justifyContent","counter","fontSize","color","buttonStyle","marginTop","width","sign","height","PlayScreen","useState","setCounter","useEffect","timer","setTimeout","prev","clearTimeout","View","style","compose","backgroundColor","Image","source","Math","round","random","Button","onPress","title","Text","App","game","setGame","header","emojiStyle","btnStyle","marginBottom","module","exports"],"mappings":"yMAGMA,EAAOC,EAAQ,IACfC,EAAQD,EAAQ,IAChBE,EAAWF,EAAQ,IAQnBG,EAAU,CAAC,UAAU,UAAW,WAoChCC,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,WAAY,SACZC,eAAgB,UAElBC,QAAS,CACPC,SAAU,IACVC,MAAO,SAETC,YAAa,CACXC,UAAW,IACXC,MAAO,KAETC,KAAK,CACHD,MAAO,IACPE,OAAQ,OAIGC,EAtDI,WACjB,MAA8BC,mBAAS,GAAvC,WAAOT,EAAP,KAAgBU,EAAhB,KAgBA,OAdAC,qBAAU,WACR,KAAGX,EAAU,GAAb,CAIA,IAAMY,EAAQC,YAAW,WACvBH,GAAW,SAACI,GAAD,OAAUA,EAAO,OAC3B,KAEH,OAAO,WACLC,aAAaH,OAEd,CAACZ,IAGF,kBAACgB,EAAA,EAAD,CAAMC,MAAOvB,IAAWwB,QAAQ,CAACC,gBAAiB3B,EAAQQ,EAAU,IAAIP,EAAOG,YAE1EI,EAAU,EACX,oCACE,kBAACoB,EAAA,EAAD,CAAOH,MAAOxB,EAAOa,KAAMe,OA7BpB,CAACjC,EAAME,EAAOC,GACT+B,KAAKC,MAAoB,EAAdD,KAAKE,aA6B5B,kBAACR,EAAA,EAAD,CAAMC,MAAOxB,EAAOU,aAClB,kBAACsB,EAAA,EAAD,CAAQC,QAAS,kBAAMhB,EAAW,IAAIiB,MAAM,iBAIhD,kBAACC,EAAA,EAAD,CAAMX,MAAOxB,EAAOO,SAAUA,KCtCvB,SAAS6B,IACtB,MAAwBpB,oBAAS,GAAjC,WAAOqB,EAAP,KAAaC,EAAb,KACA,OAAOD,EACL,kBAAC,EAAD,MAEA,kBAACd,EAAA,EAAD,CAAMC,MAAOxB,EAAOG,WAClB,kBAACgC,EAAA,EAAD,CAAMX,MAAOxB,EAAOuC,QAApB,kCACA,kBAACJ,EAAA,EAAD,CAAMX,MAAOxB,EAAOwC,YAApB,sBACA,kBAACjB,EAAA,EAAD,CAAMC,MAAOxB,EAAOyC,UAClB,kBAACT,EAAA,EAAD,CAAQE,MAAM,OAAOD,QAAS,kBAAMK,GAAQ,QAMpD,IAAMtC,EAASC,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNsB,gBAAiB,UACjBrB,WAAY,SACZC,eAAgB,UAGlBiC,OAAQ,CACN/B,SAAU,IAEZgC,WAAY,CACVhC,SAAU,GACVG,UAAW,GACX+B,aAAc,IAEhBD,SAAU,CACR9B,UAAW,GACXC,MAAO,Q,uDCtCX+B,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,uC","file":"static/js/app.662fecc8.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, View, Text, Button, Image } from 'react-native';\r\n\r\nconst rock = require('./sign/rock.png');\r\nconst paper = require('./sign/paper.png');\r\nconst scissors = require('./sign/scissors.png');\r\n\r\nconst randomImages = () => {\r\n  const emojis = [rock, paper, scissors];\r\n  const randomEmoji = Math.round(Math.random()*3);\r\n  return emojis[randomEmoji];\r\n}\r\n\r\nconst bgColor = [\"#c0392b\",\"#16a085\", \"#2ecc71\"];\r\n\r\nconst PlayScreen = () => {\r\n  const [counter, setCounter] = useState(3);\r\n\r\n  useEffect(() => {\r\n    if(counter < 1){\r\n      return;\r\n    }\r\n\r\n    const timer = setTimeout(() => {\r\n      setCounter((prev) => prev - 1);\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    }\r\n  }, [counter]);\r\n\r\n  return (\r\n    <View style={StyleSheet.compose({backgroundColor: bgColor[counter - 1]},styles.container)}>\r\n      {\r\n        (counter < 1) ?\r\n        <>\r\n          <Image style={styles.sign} source={randomImages()}/>\r\n          <View style={styles.buttonStyle}>\r\n            <Button onPress={() => setCounter(3)} title=\"Play Again\" />\r\n          </View>\r\n        </>\r\n      : \r\n        <Text style={styles.counter}>{counter}</Text>\r\n      }\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  counter: {\r\n    fontSize: 150,\r\n    color: 'white',\r\n  },\r\n  buttonStyle: {\r\n    marginTop: 100,\r\n    width: 300,\r\n  },\r\n  sign:{\r\n    width: 250,\r\n    height: 250,\r\n  }\r\n});\r\n\r\nexport default PlayScreen;\r\n","import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState } from 'react';\r\nimport { Button, StyleSheet, Text, View } from 'react-native';\r\nimport PlayScreen from './src/PlayScreen';\r\n\r\nexport default function App() {\r\n  const [game, setGame] = useState(false);\r\n  return game ? (\r\n    <PlayScreen />\r\n  ) : (\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Let's Play Rock Paper Scissors</Text>\r\n      <Text style={styles.emojiStyle}>✊✋✌</Text>\r\n      <View style={styles.btnStyle}>\r\n        <Button title=\"Play\" onPress={() => setGame(true)} />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'skyblue',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  header: {\r\n    fontSize: 40,\r\n  },\r\n  emojiStyle: {\r\n    fontSize: 65,\r\n    marginTop: 20,\r\n    marginBottom: 20,\r\n  },\r\n  btnStyle: {\r\n    marginTop: 30,\r\n    width: 250,\r\n  },\r\n});\r\n","module.exports = __webpack_public_path__ + \"static/media/rock.79436ec1.png\";","module.exports = __webpack_public_path__ + \"static/media/paper.599c25df.png\";","module.exports = __webpack_public_path__ + \"static/media/scissors.f27b7752.png\";"],"sourceRoot":""}